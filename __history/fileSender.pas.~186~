unit fileSender;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.ExtDlgs,
  Vcl.Menus, IdTCPConnection, IdTCPClient, IdBaseComponent, IdComponent,
  IdCustomTCPServer, IdTCPServer, Winsock, System.Win.ScktComp, Vcl.ComCtrls;

type
  TfrmMain = class(TForm)
    lbledt_IP: TLabeledEdit;
    lbledt_Password: TLabeledEdit;
    grpbx_ParamUser: TGroupBox;
    grpbx_Start: TGroupBox;
    grpbx_Receive: TGroupBox;
    btn_Receive: TButton;
    btn_Send: TButton;
    btn_NewTransfer: TButton;
    grpbx_Send: TGroupBox;
    lbledt_ReceiverIP: TLabeledEdit;
    lbledt_ReceiverPass: TLabeledEdit;
    btn_SendConfirm: TButton;
    filedlg_Send: TOpenTextFileDialog;
    btn_OpenFile: TButton;
    mainMenu: TMainMenu;
    menuFile: TMenuItem;
    menuFileNewTransfer: TMenuItem;
    menuFileClose: TMenuItem;
    menuProgram: TMenuItem;
    menuProgramNewPass: TMenuItem;
    menuHelp: TMenuItem;
    menuHelpHelp: TMenuItem;
    menuHelpAbout: TMenuItem;
    ClientSocket1: TClientSocket;
    ServerSocket1: TServerSocket;
    statBar_Receive: TStatusBar;
    statBar_Send: TStatusBar;
    saveDlg_Receive: TFileSaveDialog;
    procedure btn_ReceiveClick(Sender: TObject);
    procedure btn_SendClick(Sender: TObject);
    procedure btn_NewTransferClick(Sender: TObject);
    procedure btn_OpenFileClick(Sender: TObject);
    procedure btn_SendConfirmClick(Sender: TObject);
    procedure menuFileCloseClick(Sender: TObject);
    procedure menuFileNewTransferClick(Sender: TObject);
    procedure onCreate(Sender: TObject);
    procedure menuProgramNewPassClick(Sender: TObject);
    procedure ServerSocket1ClientRead(Sender: TObject;
      Socket: TCustomWinSocket);
    procedure ClientSocket1Connect(Sender: TObject; Socket: TCustomWinSocket);
    procedure ClientSocket1Read(Sender: TObject; Socket: TCustomWinSocket);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMain: TfrmMain;
  connectionPassword: string;
  Form1: TfrmMain;
  F: TFileStream;
  FileSize: Integer;
  ReceiveFile, SendFile, Receiving: Boolean;
  password: String;
implementation

{$R *.dfm}

function RandomPassword(passLen: Integer): string;
var

  str: string;
  zmiana: string;
begin
  Randomize;
  // change to only four-digit code like 0000;1234;9999  ~mjasiak
  // string with all possible digits
  str := '0123456789';
  Result := '';
  repeat
    Result := Result + str[Random(Length(str)) + 1];
  until (Length(Result) = passLen);
  connectionPassword := Result;
end;

function GetIPAddress(): String;
type
  pu_long = ^u_long;
var
  varTWSAData: TWSAData;
  varPHostEnt: PHostEnt;
  varTInAddr: TInAddr;
  namebuf: Array [0 .. 255] of ansichar;
begin
  If WSAStartup($101, varTWSAData) <> 0 Then
    Result := 'IP Address not found'
  Else
  Begin
    gethostname(namebuf, sizeof(namebuf));
    varPHostEnt := gethostbyname(namebuf);
    varTInAddr.S_addr := u_long(pu_long(varPHostEnt^.h_addr_list^)^);
    Result := inet_ntoa(varTInAddr);
  End;
  WSACleanup;
end;

procedure TfrmMain.btn_NewTransferClick(Sender: TObject);
begin
  grpbx_Send.Visible := False;
  grpbx_Receive.Visible := False;
  lbledt_ReceiverIP.Enabled := true;
  lbledt_ReceiverPass.Enabled := true;
end;

procedure TfrmMain.btn_OpenFileClick(Sender: TObject);
begin
  if filedlg_Send.Execute then
    F := TFileStream.Create(filedlg_Send.FileName, fmOpenRead);
end;

procedure TfrmMain.btn_ReceiveClick(Sender: TObject);
begin
  grpbx_Receive.Visible := True;
  ClientSocket1.Active := False;
  ServerSocket1.Port := 8080;
  ServerSocket1.Active := True;
  statBar_Receive.Panels[0].Text := 'Oczekiwanie na po³¹czenie...';
end;

procedure TfrmMain.btn_SendClick(Sender: TObject);
begin
  grpbx_Send.Visible := True;
end;

procedure TfrmMain.btn_SendConfirmClick(Sender: TObject);
begin
  if filedlg_Send.FileName <> '' then
  begin
    ServerSocket1.Active := False;
    ClientSocket1.Port := 8080;
    ClientSocket1.Address := lbledt_ReceiverIP.Text;
    ClientSocket1.Active := True;
    lbledt_ReceiverIP.Enabled := false;
    lbledt_ReceiverPass.Enabled := false;
  end
  else
  begin
    ShowMessage('Zjeba³eœ, nie wybra³eœ pliku.');
    Exit;
  end;
end;

procedure TfrmMain.ClientSocket1Connect(Sender: TObject;
  Socket: TCustomWinSocket);
begin
  Socket.SendText(lbledt_ReceiverPass.Text + IntToStr(F.Size) + ';' +
    ExtractFileName(filedlg_Send.FileName));
end;

procedure TfrmMain.ClientSocket1Read(Sender: TObject; Socket: TCustomWinSocket);
var
  Read: Integer;
  Buf: array [1 .. 1024] of Char;
  FileName: String;
begin
  if Socket.ReceiveText = 'Goodpass' then
  begin
    SendFile := True;
    while F.Position < F.Size do // 3
    begin
      Application.ProcessMessages; // 4
      if not SendFile then
        Break; // 5
      Sleep(10);

      Read := F.Read(Buf, sizeof(Buf)); // 6
      ClientSocket1.Socket.SendBuf(Buf, Read); // 7
      statBar_Send.Panels[0].Text := 'Przesy³am plik, postêp: ' +
        FormatFloat('0.00', (F.Position / F.Size) * 100) + '%'; // 8
    end;
    if F.Position < F.Size then
    begin
      statBar_Send.Panels[0].Text := 'Oczekujê na odbiór pliku....';
      SendFile := False;
      Socket.SendText('Detonuj');
    end;
  end
  else if Socket.ReceiveText = 'Badpass' then
  begin
    ShowMessage('B³êdne has³o dla podanego adresu');
    Exit;
  end;
end;

procedure TfrmMain.menuFileCloseClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TfrmMain.menuFileNewTransferClick(Sender: TObject);
begin
  btn_NewTransfer.Click();
end;

procedure TfrmMain.menuProgramNewPassClick(Sender: TObject);
begin
  password := RandomPassword(4);
  lbledt_Password.Text := password;
end;

procedure TfrmMain.onCreate(Sender: TObject);
begin
  password := RandomPassword(4);
  lbledt_IP.Text := GetIPAddress();
  lbledt_Password.Text := password;
end;

procedure TfrmMain.ServerSocket1ClientRead(Sender: TObject;
  Socket: TCustomWinSocket);
var
  Read: Integer;
  Buf: array [1 .. 1024] of Char;
  FileName: String;
  Msg: String;
  FileSize: Integer;
begin
  ReceiveFile:=False;
  Msg := Socket.ReceiveText;
    if Pos(lbledt_Password.Text, Msg) = 1 then
  begin
    FileSize := StrToInt(Copy(Msg, 5, Pos(';', Msg) - 5));
    FileName := Copy(Msg, Pos(';', Msg) + 1, Length(Msg) - Pos(';', Msg));
    statBar_Receive.Panels[0].Text := 'Uda³o siê po³¹czyæ...';
    saveDlg_Receive.FileName := FileName;
    if (MessageBox(0, 'Chcesz plik?', 'Pobieranie pliku',
      MB_YESNO + MB_ICONINFORMATION) = ID_YES) and (saveDlg_Receive.Execute)
    then
    begin
      F := TFileStream.Create(saveDlg_Receive.FileName, fmCreate);
      ReceiveFile := True;
      Socket.SendText('Goodpass');
    end;

    while F.Position < FileSize do
    begin
    if not ReceiveFile then
        Break; // 5
      Sleep(10);

    Read := Socket.ReceiveBuf(Buf, sizeof(Buf));
    statBar_Receive.Panels[0].Text := 'Odbieram plik, postêp: ' +
      FormatFloat('0.00', (F.Position / FileSize) * 100) + '%'; // 8
    F.Write(Buf, Read);
    end;
    if F.Position >= FileSize then
    begin
      F.Free;
      statBar_Receive.Panels[0].Text := 'Przesy³anie zakoñczone sukcesem.';
      ReceiveFile := False;
      Exit;
    end;
end;
end;
end.
